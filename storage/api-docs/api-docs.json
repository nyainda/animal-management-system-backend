{
    "openapi": "3.0.0",
    "info": {
        "title": "Animal Management API",
        "description": "API for managing animals, including CRUD operations and detailed animal information.\n *      Workflow: First, register and log in to the system. Then, create an animal to generate a unique animal_id (UUID). Use this animal_id to create tasks, notes, and other related data.",
        "contact": {
            "email": "oyugibruce@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/animals/{animal}/activities": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Get activities for a specific animal",
                "description": "Get activities for an animal.",
                "operationId": "f111b66a6a7aab4ef8f1820b4f271203",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by activity type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "feeding"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Filter activities from this date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Filter activities up to this date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-12-31"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of activities per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of activities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ActivityResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Animal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Create a new activity for an animal",
                "description": "Create a new activity for an animal.",
                "operationId": "85e979362bcb9f6f717844410d190c3d",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "activity_type",
                                    "activity_date"
                                ],
                                "properties": {
                                    "activity_type": {
                                        "description": "Type of activity",
                                        "type": "string",
                                        "example": "feeding"
                                    },
                                    "activity_date": {
                                        "description": "Date of the activity",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-30"
                                    },
                                    "description": {
                                        "description": "Activity description",
                                        "type": "string",
                                        "example": "Fed the animal with grain"
                                    },
                                    "notes": {
                                        "description": "Additional notes",
                                        "type": "string",
                                        "example": "Animal seemed healthy",
                                        "nullable": true
                                    },
                                    "breeding_date": {
                                        "description": "Breeding date, if applicable",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-30",
                                        "nullable": true
                                    },
                                    "breeding_notes": {
                                        "description": "Breeding-specific notes",
                                        "type": "string",
                                        "example": "Successful breeding",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Activity created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ActivityResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Animal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/activities/{activity}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Get a specific activity",
                "description": "Get a specific activity for an animal.",
                "operationId": "59e3d5f11a450055d3fed2f56f4b9585",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "activity",
                        "in": "path",
                        "description": "UUID of the activity",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ActivityResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity or animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Activity not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Activities"
                ],
                "summary": "Delete a specific activity",
                "description": "Delete an activity for an animal.",
                "operationId": "dd266b9a1ee3ce5934c08b5059b3507b",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "activity",
                        "in": "path",
                        "description": "UUID of the activity",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity deleted successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Cannot delete automatic activities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete automatic activities"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity or animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Activity not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/activities/generate-birthdays": {
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Generate birthday activities for animals",
                "description": "Generate birthday activities manually.",
                "operationId": "edfd08232249769cee18da44c4517d3a",
                "responses": {
                    "200": {
                        "description": "Birthday activities generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Birthday activities generated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to generate birthday activities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to generate birthday activities"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals": {
            "get": {
                "tags": [
                    "Animals"
                ],
                "summary": "Get a list of animals",
                "operationId": "d47bba33f4e19814c0c91ec8aaeca5d4",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by animal type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "sold",
                                "deceased"
                            ]
                        }
                    },
                    {
                        "name": "breed",
                        "in": "query",
                        "description": "Filter by breed",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Filter by gender",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "male",
                                "female"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AnimalWithDetails"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Animals retrieved successfully"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to index animal"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Animals"
                ],
                "summary": "Create a new animal",
                "operationId": "e2dcc6471aa9814aa4bcf7a85f3ba91f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Animal"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "cattle"
                                    },
                                    "breed": {
                                        "type": "string",
                                        "example": "Angus"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ],
                                        "example": "male"
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-01"
                                    },
                                    "birth_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-01-01 08:00:00"
                                    },
                                    "birth_status": {
                                        "type": "string",
                                        "example": "normal"
                                    },
                                    "health_at_birth": {
                                        "type": "string",
                                        "example": "healthy"
                                    },
                                    "relationships": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "related_animal_id": {
                                                    "type": "string",
                                                    "example": "uuid-of-dam"
                                                },
                                                "relationship_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "dam",
                                                        "sire"
                                                    ],
                                                    "example": "dam"
                                                },
                                                "breeding_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-04-01"
                                                },
                                                "breeding_notes": {
                                                    "type": "string",
                                                    "example": "Natural breeding"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Animal created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AnimalWithDetails"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Animal created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to store animal"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/animals/{id}": {
            "get": {
                "tags": [
                    "Animals"
                ],
                "summary": "Get a specific animal",
                "operationId": "d1d10d469918e58e64ba56286983b9db",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Animal ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AnimalWithDetails"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Animal retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Animal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to show animal"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Animals"
                ],
                "summary": "Update an existing animal",
                "operationId": "9d024a294302141a4180ef34b1133375",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Animal ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Bessie"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Cow"
                                    },
                                    "breed": {
                                        "type": "string",
                                        "example": "Holstein"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "sold"
                                    },
                                    "tag_number": {
                                        "type": "string",
                                        "example": "A123"
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-15"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "female"
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 650.5
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.4
                                    },
                                    "is_breeding_stock": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "internal_id": {
                                        "type": "string",
                                        "example": "INT-001"
                                    },
                                    "birth_details": {
                                        "properties": {
                                            "birth_weight": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 40.5
                                            },
                                            "birth_status": {
                                                "type": "string",
                                                "example": "healthy"
                                            },
                                            "health_at_birth": {
                                                "type": "string",
                                                "example": "good"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Animal updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AnimalWithDetails"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Animal updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Animal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update animal"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Animals"
                ],
                "summary": "Delete an animal",
                "operationId": "85b36fa18285b5e82de3be14be931cff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Animal ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Animal deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Animal deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Animal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to destroy animal"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/animals/{animal}/production": {
            "get": {
                "tags": [
                    "Production Records"
                ],
                "summary": "Get production records for a specific animal",
                "description": "Display a list of production records for an animal.",
                "operationId": "d051fe01ce1751f67a5ef3b59bbf1109",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of production records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/YieldRecordResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/production?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/production?page=10"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/production?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/production"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Production records retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Animal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Production Records"
                ],
                "summary": "Create a new production record for an animal",
                "description": "Store a new production record.",
                "operationId": "4b68861dd8b18aab9c919fcb575b59bc",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_category": {
                                        "description": "Details of the product category",
                                        "properties": {
                                            "name": {
                                                "description": "Category name",
                                                "type": "string",
                                                "example": "Milk"
                                            },
                                            "description": {
                                                "description": "Category description",
                                                "type": "string",
                                                "example": "Fresh dairy product"
                                            },
                                            "measurement_unit": {
                                                "description": "Unit of measurement",
                                                "type": "string",
                                                "example": "Liters"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "product_grade": {
                                        "description": "Details of the product grade",
                                        "properties": {
                                            "name": {
                                                "description": "Grade name",
                                                "type": "string",
                                                "example": "Grade A"
                                            },
                                            "description": {
                                                "description": "Grade description",
                                                "type": "string",
                                                "example": "Premium quality"
                                            },
                                            "price_modifier": {
                                                "description": "Price modifier",
                                                "type": "number",
                                                "format": "float",
                                                "example": 1.2
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "production_method": {
                                        "description": "Details of the production method",
                                        "properties": {
                                            "method_name": {
                                                "description": "Method name",
                                                "type": "string",
                                                "example": "Traditional Milking"
                                            },
                                            "description": {
                                                "description": "Method description",
                                                "type": "string",
                                                "example": "Hand milking technique"
                                            },
                                            "requires_certification": {
                                                "description": "Certification requirement",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "is_active": {
                                                "description": "Active status",
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "collector": {
                                        "description": "Details of the collector",
                                        "properties": {
                                            "name": {
                                                "description": "Collector name",
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "contact_info": {
                                                "description": "Collector contact info",
                                                "type": "string",
                                                "example": "+1 234 567 8901"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "storage_location": {
                                        "description": "Details of the storage location",
                                        "properties": {
                                            "name": {
                                                "description": "Storage name",
                                                "type": "string",
                                                "example": "Cold Storage 1"
                                            },
                                            "location_code": {
                                                "description": "Storage location code",
                                                "type": "string",
                                                "example": "CS-101"
                                            },
                                            "description": {
                                                "description": "Storage description",
                                                "type": "string",
                                                "example": "Primary refrigerated storage"
                                            },
                                            "storage_conditions": {
                                                "description": "List of storage conditions",
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Temperature controlled"
                                                }
                                            },
                                            "is_active": {
                                                "description": "Active status",
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "quantity": {
                                        "description": "Production quantity",
                                        "type": "number",
                                        "format": "float",
                                        "example": 100.5
                                    },
                                    "price_per_unit": {
                                        "description": "Price per unit",
                                        "type": "number",
                                        "format": "float",
                                        "example": 2.5
                                    },
                                    "total_price": {
                                        "description": "Total price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 251.25
                                    },
                                    "production_date": {
                                        "description": "Date of production",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-12"
                                    },
                                    "production_time": {
                                        "description": "Time of production",
                                        "type": "string",
                                        "example": "14:30"
                                    },
                                    "quality_status": {
                                        "description": "Quality status",
                                        "type": "string",
                                        "example": "Passed"
                                    },
                                    "quality_notes": {
                                        "description": "Quality notes",
                                        "type": "string",
                                        "example": "Meets all standard requirements"
                                    },
                                    "trace_number": {
                                        "description": "Traceability number",
                                        "type": "string",
                                        "example": "TR-123456"
                                    },
                                    "weather_conditions": {
                                        "description": "Weather conditions during production",
                                        "properties": {
                                            "temperature": {
                                                "description": "Temperature in Celsius",
                                                "type": "number",
                                                "format": "float",
                                                "example": 22.5
                                            },
                                            "humidity": {
                                                "description": "Humidity percentage",
                                                "type": "integer",
                                                "example": 65
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "storage_conditions": {
                                        "description": "Storage conditions",
                                        "properties": {
                                            "temperature": {
                                                "description": "Storage temperature in Celsius",
                                                "type": "number",
                                                "format": "float",
                                                "example": 4
                                            },
                                            "humidity": {
                                                "description": "Storage humidity percentage",
                                                "type": "integer",
                                                "example": 70
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "is_organic": {
                                        "description": "Organic status",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "certification_number": {
                                        "description": "Certification number",
                                        "type": "string",
                                        "example": "ORG-987654"
                                    },
                                    "additional_attributes": {
                                        "description": "Additional product attributes",
                                        "properties": {
                                            "fat_content": {
                                                "description": "Fat content",
                                                "type": "string",
                                                "example": "3.5%"
                                            },
                                            "pasteurized": {
                                                "description": "Pasteurization status",
                                                "type": "string",
                                                "example": "Yes"
                                            },
                                            "homogenized": {
                                                "description": "Homogenization status",
                                                "type": "string",
                                                "example": "Yes"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "notes": {
                                        "description": "Additional notes",
                                        "type": "string",
                                        "example": "Batch processed according to standard protocols."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Production record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/YieldRecordResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Production record created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/production/{production}": {
            "get": {
                "tags": [
                    "Production Records"
                ],
                "summary": "Get a specific production record",
                "description": "Display the specified production record.",
                "operationId": "a77d2fdf62d18f5fec075f18c57eccef",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "production",
                        "in": "path",
                        "description": "UUID of the production record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Production record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/YieldRecordResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Production record retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Production record or animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Production record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Production Records"
                ],
                "summary": "Update a specific production record",
                "description": "Update the specified production record.",
                "operationId": "fb657b3f8bcd07263a52776deb6636b0",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "production",
                        "in": "path",
                        "description": "UUID of the production record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "production_date": {
                                        "description": "Date of production",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-24"
                                    },
                                    "production_time": {
                                        "description": "Time of production",
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00:00"
                                    },
                                    "yield_quantity": {
                                        "description": "Quantity of yield",
                                        "type": "number",
                                        "format": "float",
                                        "example": 5.5
                                    },
                                    "unit": {
                                        "description": "Unit of measurement",
                                        "type": "string",
                                        "example": "liters"
                                    },
                                    "storage_location_id": {
                                        "description": "UUID of the storage location",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                                    },
                                    "production_method_id": {
                                        "description": "UUID of the production method",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "7c9e6679-7425-40de-944b-e07fc1f90ae7"
                                    },
                                    "product_grade_id": {
                                        "description": "UUID of the product grade",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "8f14e45f-ceea-41d4-a716-446655440000"
                                    },
                                    "product_category_id": {
                                        "description": "UUID of the product category",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Production record updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/YieldRecordResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Production record updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Production Records"
                ],
                "summary": "Delete a specific production record",
                "description": "Remove the specified production record.",
                "operationId": "c0556f67cc4082ac87dabf93d171650e",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "production",
                        "in": "path",
                        "description": "UUID of the production record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Production record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Production record deleted successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Production record or animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Production record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/production/form-data": {
            "get": {
                "tags": [
                    "Production Records"
                ],
                "summary": "Get form data for creating production records",
                "description": "Get form data for production records.",
                "operationId": "aa84de00b02c0cdd7ebfd5b23a484c84",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Form data for production records",
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form data retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Animal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/production-statistics": {
            "get": {
                "tags": [
                    "Production Records"
                ],
                "summary": "Get production statistics for an animal",
                "description": "Get production statistics for an animal.",
                "operationId": "9d80a2d9da97bc6992f012ebf6e75550",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for statistics (e.g., 'week', 'month', 'year', 'all')",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "all",
                            "enum": [
                                "week",
                                "month",
                                "year",
                                "all"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Production statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Production statistics",
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Production statistics retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Animal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Get all health records for an animal with filtering and sorting",
                "operationId": "2889c06861ec049fe004021190bf5e00",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "health_status",
                        "in": "query",
                        "description": "Filter by health status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Healthy"
                        }
                    },
                    {
                        "name": "vaccination_status",
                        "in": "query",
                        "description": "Filter by vaccination status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Up-to-date"
                        }
                    },
                    {
                        "name": "vet_contact_id",
                        "in": "query",
                        "description": "Filter by vet contact ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "created_at"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of health records retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/HealthResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/health?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/health?page=10"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/health?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/health"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch health records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch health records"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Internal server error"
                                            }
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Health"
                ],
                "summary": "Create a new health record for an animal",
                "operationId": "d91aca2c4967deb3031b4a3ea57ed007",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "health_status": {
                                        "description": "Health status",
                                        "type": "string",
                                        "example": "Healthy"
                                    },
                                    "vaccination_status": {
                                        "description": "Vaccination status",
                                        "type": "string",
                                        "example": "Up-to-date"
                                    },
                                    "medical_history": {
                                        "description": "Medical history as key-value pairs",
                                        "type": "object",
                                        "example": {
                                            "2023-10-01": "Routine checkup"
                                        },
                                        "nullable": true
                                    },
                                    "neutered_spayed": {
                                        "description": "Neutered or spayed status",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Health record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/HealthResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Health record created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid health status transition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid health status transition"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User must be authenticated to create a health record"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create health record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create health record"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/health/{health}": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Get a specific health record for an animal",
                "operationId": "6d3dc7223c20aa693bf8ae5a32b0d999",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "health",
                        "in": "path",
                        "description": "UUID of the health record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/HealthResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Health record retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve health record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve health record"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Health"
                ],
                "summary": "Update a specific health record for an animal",
                "operationId": "b88571496cd63967e64239839495642d",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "health",
                        "in": "path",
                        "description": "UUID of the health record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "health_status": {
                                        "description": "Updated health status",
                                        "type": "string",
                                        "example": "Sick"
                                    },
                                    "vaccination_status": {
                                        "description": "Updated vaccination status",
                                        "type": "string",
                                        "example": "Due"
                                    },
                                    "vet_contact_id": {
                                        "description": "Updated vet contact ID",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "123e4567-e89b-12d3-a456-426614174000",
                                        "nullable": true
                                    },
                                    "medical_history": {
                                        "description": "Updated medical history",
                                        "type": "string",
                                        "example": "Treated for infection in 2025",
                                        "nullable": true
                                    },
                                    "dietary_restrictions": {
                                        "description": "Updated dietary restrictions",
                                        "type": "string",
                                        "example": "No grains",
                                        "nullable": true
                                    },
                                    "neutered_spayed": {
                                        "description": "Updated neutered or spayed status",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "regular_medication": {
                                        "description": "Updated regular medication",
                                        "type": "string",
                                        "example": "Antibiotics",
                                        "nullable": true
                                    },
                                    "last_vet_visit": {
                                        "description": "Updated last vet visit date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-25",
                                        "nullable": true
                                    },
                                    "insurance_details": {
                                        "description": "Updated insurance details",
                                        "type": "string",
                                        "example": "Policy #67890",
                                        "nullable": true
                                    },
                                    "exercise_requirements": {
                                        "description": "Updated exercise requirements",
                                        "type": "string",
                                        "example": "15 min walk daily",
                                        "nullable": true
                                    },
                                    "parasite_prevention": {
                                        "description": "Updated parasite prevention",
                                        "type": "string",
                                        "example": "Weekly tick treatment",
                                        "nullable": true
                                    },
                                    "vaccinations": {
                                        "description": "Updated vaccination details",
                                        "type": "string",
                                        "example": "Distemper: 2025-03-01",
                                        "nullable": true
                                    },
                                    "allergies": {
                                        "description": "Updated allergies",
                                        "type": "string",
                                        "example": "Pollen",
                                        "nullable": true
                                    },
                                    "notes": {
                                        "description": "Updated notes",
                                        "type": "string",
                                        "example": "Check temperature",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Health record updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/HealthResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Health record updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid health status transition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid health status transition"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update health record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update health record"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Health"
                ],
                "summary": "Delete a specific health record for an animal",
                "operationId": "f3c27b834b5af0629198359264a63bec",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "health",
                        "in": "path",
                        "description": "UUID of the health record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Health record deleted successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete health record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete health record"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/health/reports": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Generate health reports for an animal",
                "operationId": "4bbca1f389c7bc7cca6c1907394b40f8",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health reports generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "status_group": {
                                                    "description": "Group of the animal's status",
                                                    "type": "string",
                                                    "example": "healthy"
                                                },
                                                "vaccination_due": {
                                                    "description": "Number of vaccinations due",
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "medical_history": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-03-24T10:00:00Z"
                                                            },
                                                            "history": {
                                                                "type": "string",
                                                                "example": "Recovered from flu"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "recent_vet_visits": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                                                            },
                                                            "visit_date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2025-03-20"
                                                            },
                                                            "health_status": {
                                                                "type": "string",
                                                                "example": "Healthy"
                                                            },
                                                            "notes": {
                                                                "type": "string",
                                                                "example": "Routine checkup",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "status_actions": {
                                                    "description": "Required action based on status",
                                                    "type": "string",
                                                    "example": "Schedule vet visit",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Health reports generated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Animal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Animal not found"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to generate health reports",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to generate health reports"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/health/action": {
            "post": {
                "tags": [
                    "Health"
                ],
                "summary": "Perform a status-based action for an animal",
                "operationId": "b3a9011c49776f77b8e3c4bebd38f813",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status action performed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "animal_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "action": {
                                                    "type": "string",
                                                    "example": "Schedule vet visit"
                                                },
                                                "result": {
                                                    "type": "string",
                                                    "example": "Action performed successfully"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Status action performed successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid animal status or no action required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid animal status"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to perform status action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to perform status action"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/notes": {
            "get": {
                "tags": [
                    "Notes"
                ],
                "summary": "Get a list of notes for a specific animal",
                "description": "Display a listing of notes for a specific animal.",
                "operationId": "403b730898a67811a9594c1fec89b620",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of notes per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NoteResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/notes?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/notes?page=10"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/notes?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/notes"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notes retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notes"
                ],
                "summary": "Create a new note for a specific animal",
                "description": "Store a newly created note for a specific animal.",
                "operationId": "1cfa2077e5084a18c7498803e591ed26",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "description": "Main content of the note",
                                        "type": "string",
                                        "example": "Important meeting notes from the quarterly review"
                                    },
                                    "category": {
                                        "description": "Category of the note",
                                        "type": "string",
                                        "example": "Business"
                                    },
                                    "keywords": {
                                        "description": "Keywords associated with the note",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "meeting",
                                            "quarterly",
                                            "review",
                                            "finances"
                                        ]
                                    },
                                    "file_path": {
                                        "description": "Path to attached file",
                                        "type": "string",
                                        "example": "/uploads/documents/meeting_notes_q1.pdf",
                                        "nullable": true
                                    },
                                    "add_to_calendar": {
                                        "description": "Whether to add to calendar",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "status": {
                                        "description": "Status of the note",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "completed",
                                            "cancelled"
                                        ],
                                        "example": "pending",
                                        "nullable": true
                                    },
                                    "priority": {
                                        "description": "Priority level",
                                        "type": "string",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ],
                                        "example": "high",
                                        "nullable": true
                                    },
                                    "due_date": {
                                        "description": "Due date for the note",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-04-01",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/NoteResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create note"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/notes/{note}": {
            "get": {
                "tags": [
                    "Notes"
                ],
                "summary": "Get a specific note for an animal",
                "description": "Display the specified note.",
                "operationId": "9b1f30ab1b6c13deb4398a1037e22328",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "note",
                        "in": "path",
                        "description": "UUID of the note",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/NoteResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found for this animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found for this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Notes"
                ],
                "summary": "Update a specific note for an animal",
                "description": "Update the specified note.",
                "operationId": "308524972a8bb38479b47b436406935d",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "note",
                        "in": "path",
                        "description": "UUID of the note",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "description": "Updated main content of the note",
                                        "type": "string",
                                        "example": "Updated meeting notes from the quarterly review"
                                    },
                                    "category": {
                                        "description": "Updated category of the note",
                                        "type": "string",
                                        "example": "Business"
                                    },
                                    "keywords": {
                                        "description": "Updated keywords associated with the note",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "meeting",
                                            "quarterly",
                                            "review",
                                            "finances"
                                        ]
                                    },
                                    "file_path": {
                                        "description": "Updated path to attached file",
                                        "type": "string",
                                        "example": "/uploads/documents/meeting_notes_q1.pdf",
                                        "nullable": true
                                    },
                                    "add_to_calendar": {
                                        "description": "Updated whether to add to calendar",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "status": {
                                        "description": "Updated status of the note",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "completed",
                                            "cancelled"
                                        ],
                                        "example": "pending",
                                        "nullable": true
                                    },
                                    "priority": {
                                        "description": "Updated priority level",
                                        "type": "string",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ],
                                        "example": "high",
                                        "nullable": true
                                    },
                                    "due_date": {
                                        "description": "Updated due date for the note",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-04-01",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Note updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/NoteResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found for this animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found for this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update note"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notes"
                ],
                "summary": "Delete a specific note for an animal",
                "description": "Remove the specified note.",
                "operationId": "4cbbadd1d9878acccbd789f4e7d994c8",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "note",
                        "in": "path",
                        "description": "UUID of the note",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note deleted successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found for this animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found for this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete note"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/suppliers": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get a list of suppliers for a specific animal",
                "operationId": "d2e479a37a68094d1d475209192e4324",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of suppliers per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of suppliers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SupplierResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/suppliers?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/suppliers?page=10"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/suppliers?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api.example.com/api/animals/550e8400-e29b-41d4-a716-446655440000/suppliers"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Suppliers retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid animal ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid animal ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Create a new supplier for a specific animal",
                "operationId": "35b200474ecbcc522cba454a5483a89c",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Supplier name",
                                        "type": "string",
                                        "example": "Supplier Name"
                                    },
                                    "email": {
                                        "description": "Supplier email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "supplier29@example.com"
                                    },
                                    "phone": {
                                        "description": "Supplier phone",
                                        "type": "string",
                                        "example": "9223-456-7890"
                                    },
                                    "tax_number": {
                                        "description": "Tax number",
                                        "type": "string",
                                        "example": "TNr8123456"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "example": "Anytown"
                                    },
                                    "state": {
                                        "description": "State",
                                        "type": "string",
                                        "example": "CA"
                                    },
                                    "postal_code": {
                                        "description": "Postal code",
                                        "type": "string",
                                        "example": "90210"
                                    },
                                    "country": {
                                        "description": "Country",
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "latitude": {
                                        "description": "Latitude",
                                        "type": "number",
                                        "format": "float",
                                        "example": 34.0522
                                    },
                                    "longitude": {
                                        "description": "Longitude",
                                        "type": "number",
                                        "format": "float",
                                        "example": -118.2437
                                    },
                                    "type": {
                                        "description": "Supplier type",
                                        "type": "string",
                                        "example": "feed"
                                    },
                                    "product_type": {
                                        "description": "Product type",
                                        "type": "string",
                                        "example": "Animal Feed"
                                    },
                                    "shop_name": {
                                        "description": "Shop name",
                                        "type": "string",
                                        "example": "Example Feed Supply"
                                    },
                                    "business_registration_number": {
                                        "description": "Business registration number",
                                        "type": "string",
                                        "example": "BRN17293456"
                                    },
                                    "contract_start_date": {
                                        "description": "Contract start date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-01"
                                    },
                                    "contract_end_date": {
                                        "description": "Contract end date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01"
                                    },
                                    "account_holder": {
                                        "description": "Account holder",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "account_number": {
                                        "description": "Account number",
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "bank_name": {
                                        "description": "Bank name",
                                        "type": "string",
                                        "example": "Example Bank"
                                    },
                                    "bank_branch": {
                                        "description": "Bank branch",
                                        "type": "string",
                                        "example": "Main Branch"
                                    },
                                    "swift_code": {
                                        "description": "SWIFT code",
                                        "type": "string",
                                        "example": "EXMPL123"
                                    },
                                    "iban": {
                                        "description": "IBAN",
                                        "type": "string",
                                        "example": "IBAN1234567890"
                                    },
                                    "supplier_importance": {
                                        "description": "Supplier importance",
                                        "type": "string",
                                        "example": "medium"
                                    },
                                    "inventory_level": {
                                        "description": "Inventory level",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "reorder_point": {
                                        "description": "Reorder point",
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "minimum_order_quantity": {
                                        "description": "Minimum order quantity",
                                        "type": "integer",
                                        "example": 20
                                    },
                                    "lead_time_days": {
                                        "description": "Lead time in days",
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "payment_terms": {
                                        "description": "Payment terms",
                                        "type": "string",
                                        "example": "net30"
                                    },
                                    "credit_limit": {
                                        "description": "Credit limit",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10000
                                    },
                                    "currency": {
                                        "description": "Currency",
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "tax_rate": {
                                        "description": "Tax rate",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "supplier_rating": {
                                        "description": "Supplier rating",
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.5
                                    },
                                    "status": {
                                        "description": "Status",
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "notes": {
                                        "description": "Notes",
                                        "type": "string",
                                        "example": "Some notes about the supplier."
                                    },
                                    "meta_data": {
                                        "description": "Additional metadata for the supplier",
                                        "properties": {
                                            "key1": {
                                                "description": "Custom key-value pair",
                                                "type": "string",
                                                "example": "value1"
                                            },
                                            "key2": {
                                                "description": "Custom key-value pair",
                                                "type": "string",
                                                "example": "value2"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "contact_name": {
                                        "description": "Primary contact name",
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "contact_position": {
                                        "description": "Primary contact position",
                                        "type": "string",
                                        "example": "Sales Manager"
                                    },
                                    "contact_email": {
                                        "description": "Primary contact email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane.smith@example.com"
                                    },
                                    "contact_phone": {
                                        "description": "Primary contact phone",
                                        "type": "string",
                                        "example": "987-654-3210"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Supplier created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SupplierResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid animal ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid animal ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create supplier"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/suppliers/{supplier}": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get a specific supplier for an animal",
                "operationId": "5ec217d7797c558b23f44c3485e715eb",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "supplier",
                        "in": "path",
                        "description": "UUID of the supplier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SupplierResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not associated with this animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This supplier is not associated with the specified animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Update a specific supplier for an animal",
                "operationId": "d16d99699d5cab821a817dcc04a79e07",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "supplier",
                        "in": "path",
                        "description": "UUID of the supplier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated supplier name",
                                        "type": "string",
                                        "example": "Updated Farm Supplies"
                                    },
                                    "email": {
                                        "description": "Updated supplier email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "newcontact@farmsupplies.com"
                                    },
                                    "phone": {
                                        "description": "Updated supplier phone",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "website": {
                                        "description": "Updated supplier website",
                                        "type": "string",
                                        "example": "https://newfarmsupplies.com",
                                        "nullable": true
                                    },
                                    "tax_number": {
                                        "description": "Updated tax number",
                                        "type": "string",
                                        "example": "TAX654321",
                                        "nullable": true
                                    },
                                    "address": {
                                        "description": "Updated address",
                                        "type": "string",
                                        "example": "456 Farm Road"
                                    },
                                    "city": {
                                        "description": "Updated city",
                                        "type": "string",
                                        "example": "Springfield"
                                    },
                                    "state": {
                                        "description": "Updated state",
                                        "type": "string",
                                        "example": "IL"
                                    },
                                    "postal_code": {
                                        "description": "Updated postal code",
                                        "type": "string",
                                        "example": "62702"
                                    },
                                    "country": {
                                        "description": "Updated country",
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "latitude": {
                                        "description": "Updated latitude",
                                        "type": "number",
                                        "format": "float",
                                        "example": 39.7817,
                                        "nullable": true
                                    },
                                    "longitude": {
                                        "description": "Updated longitude",
                                        "type": "number",
                                        "format": "float",
                                        "example": -89.6501,
                                        "nullable": true
                                    },
                                    "type": {
                                        "description": "Updated supplier type",
                                        "type": "string",
                                        "example": "vendor"
                                    },
                                    "product_type": {
                                        "description": "Updated product type",
                                        "type": "string",
                                        "example": "feed"
                                    },
                                    "shop_name": {
                                        "description": "Updated shop name",
                                        "type": "string",
                                        "example": "New Farm Store",
                                        "nullable": true
                                    },
                                    "business_registration_number": {
                                        "description": "Updated business registration number",
                                        "type": "string",
                                        "example": "BRN123456",
                                        "nullable": true
                                    },
                                    "contract_start_date": {
                                        "description": "Updated contract start date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-02-01",
                                        "nullable": true
                                    },
                                    "contract_end_date": {
                                        "description": "Updated contract end date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2026-01-31",
                                        "nullable": true
                                    },
                                    "account_holder": {
                                        "description": "Updated account holder",
                                        "type": "string",
                                        "example": "Updated Farm Supplies",
                                        "nullable": true
                                    },
                                    "account_number": {
                                        "description": "Updated account number",
                                        "type": "string",
                                        "example": "0987654321",
                                        "nullable": true
                                    },
                                    "bank_name": {
                                        "description": "Updated bank name",
                                        "type": "string",
                                        "example": "Second National Bank",
                                        "nullable": true
                                    },
                                    "bank_branch": {
                                        "description": "Updated bank branch",
                                        "type": "string",
                                        "example": "Downtown Branch",
                                        "nullable": true
                                    },
                                    "swift_code": {
                                        "description": "Updated SWIFT code",
                                        "type": "string",
                                        "example": "SNUS33XXX",
                                        "nullable": true
                                    },
                                    "iban": {
                                        "description": "Updated IBAN",
                                        "type": "string",
                                        "example": "US09876543210987654321",
                                        "nullable": true
                                    },
                                    "supplier_importance": {
                                        "description": "Updated supplier importance",
                                        "type": "string",
                                        "example": "medium"
                                    },
                                    "inventory_level": {
                                        "description": "Updated inventory level",
                                        "type": "integer",
                                        "example": 150
                                    },
                                    "reorder_point": {
                                        "description": "Updated reorder point",
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "minimum_order_quantity": {
                                        "description": "Updated minimum order quantity",
                                        "type": "integer",
                                        "example": 75
                                    },
                                    "lead_time_days": {
                                        "description": "Updated lead time in days",
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "payment_terms": {
                                        "description": "Updated payment terms",
                                        "type": "string",
                                        "example": "Net 60"
                                    },
                                    "credit_limit": {
                                        "description": "Updated credit limit",
                                        "type": "number",
                                        "format": "float",
                                        "example": 7500
                                    },
                                    "currency": {
                                        "description": "Updated currency",
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "tax_rate": {
                                        "description": "Updated tax rate",
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.09
                                    },
                                    "supplier_rating": {
                                        "description": "Updated supplier rating",
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.8
                                    },
                                    "status": {
                                        "description": "Updated status",
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "notes": {
                                        "description": "Updated notes",
                                        "type": "string",
                                        "example": "Updated reliable supplier",
                                        "nullable": true
                                    },
                                    "contact_name": {
                                        "description": "Updated primary contact name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_position": {
                                        "description": "Updated primary contact position",
                                        "type": "string",
                                        "example": "New Sales Manager",
                                        "nullable": true
                                    },
                                    "contact_email": {
                                        "description": "Updated primary contact email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@farmsupplies.com",
                                        "nullable": true
                                    },
                                    "contact_phone": {
                                        "description": "Updated primary contact phone",
                                        "type": "string",
                                        "example": "+1234567892",
                                        "nullable": true
                                    },
                                    "additional_contacts": {
                                        "description": "Updated additional supplier contacts",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "description": "Contact name",
                                                    "type": "string",
                                                    "example": "Jane Smith"
                                                },
                                                "position": {
                                                    "description": "Contact position",
                                                    "type": "string",
                                                    "example": "Updated Assistant",
                                                    "nullable": true
                                                },
                                                "email": {
                                                    "description": "Contact email",
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane.smith@farmsupplies.com",
                                                    "nullable": true
                                                },
                                                "phone": {
                                                    "description": "Contact phone",
                                                    "type": "string",
                                                    "example": "+1234567893",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "nullable": true
                                    },
                                    "relationship_type": {
                                        "description": "Updated relationship type",
                                        "type": "string",
                                        "example": "secondary"
                                    },
                                    "start_date": {
                                        "description": "Updated relationship start date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-02-01",
                                        "nullable": true
                                    },
                                    "end_date": {
                                        "description": "Updated relationship end date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2026-01-31",
                                        "nullable": true
                                    },
                                    "relationship_notes": {
                                        "description": "Updated relationship notes",
                                        "type": "string",
                                        "example": "Updated feed supplier",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Supplier updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SupplierResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not associated with this animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This supplier is not associated with the specified animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update supplier"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Delete a supplier association or the supplier itself for an animal",
                "operationId": "2563b8ff9a3de6a1a58260530a041b60",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "supplier",
                        "in": "path",
                        "description": "UUID of the supplier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    },
                    {
                        "name": "force_delete",
                        "in": "query",
                        "description": "Force delete the supplier and its contacts if true",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier successfully removed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier successfully removed"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not associated with this animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This supplier is not associated with the specified animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete supplier"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a list of tasks for a specific animal",
                "description": "Display a listing of the tasks for a specific animal.",
                "operationId": "16e6740b4df5fb99446a51cc06d0f046",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaskResource"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task for a specific animal",
                "description": "Store a newly created task for the specified animal.",
                "operationId": "e2e06a35e91b4266b8b038b113b47644",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Meeting with Team"
                                    },
                                    "task_type": {
                                        "type": "string",
                                        "example": "health_check"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2025-03-15"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "example": "14:30"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2025-03-15"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "example": "15:30"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Discuss project progress and next steps"
                                    },
                                    "health_notes": {
                                        "type": "string",
                                        "example": "Remember to take a break afterward"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Conference Room A"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "example": "medium"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "pending"
                                    },
                                    "repeats": {
                                        "type": "string",
                                        "example": "weekly"
                                    },
                                    "repeat_frequency": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "end_repeat_date": {
                                        "type": "string",
                                        "example": "2025-04-30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TaskResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create task"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/tasks/{task}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a specific task for an animal",
                "description": "Display the specified task.",
                "operationId": "8cf5223a7c1d783c0adda7c80a917cc9",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "task",
                        "in": "path",
                        "description": "UUID of the task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TaskResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found for this animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found for this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a specific task for an animal",
                "description": "Update the specified task.",
                "operationId": "e679af7c53224984654c3f999c47a299",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "task",
                        "in": "path",
                        "description": "UUID of the task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Updated title",
                                        "type": "string",
                                        "example": "Updated Vaccination"
                                    },
                                    "task_type": {
                                        "description": "Updated task type",
                                        "type": "string",
                                        "example": "medical"
                                    },
                                    "start_date": {
                                        "description": "Updated start date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-26"
                                    },
                                    "start_time": {
                                        "description": "Updated start time",
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00:00"
                                    },
                                    "end_date": {
                                        "description": "Updated end date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-26",
                                        "nullable": true
                                    },
                                    "end_time": {
                                        "description": "Updated end time",
                                        "type": "string",
                                        "format": "time",
                                        "example": "11:00:00",
                                        "nullable": true
                                    },
                                    "duration": {
                                        "description": "Updated duration in minutes",
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "description": {
                                        "description": "Updated description",
                                        "type": "string",
                                        "example": "Updated vaccine administration"
                                    },
                                    "health_notes": {
                                        "description": "Updated health notes",
                                        "type": "string",
                                        "example": "Check for reactions",
                                        "nullable": true
                                    },
                                    "location": {
                                        "description": "Updated location",
                                        "type": "string",
                                        "example": "Barn B"
                                    },
                                    "priority": {
                                        "description": "Updated priority",
                                        "type": "string",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ],
                                        "example": "high"
                                    },
                                    "status": {
                                        "description": "Updated status",
                                        "type": "string",
                                        "example": "in_progress"
                                    },
                                    "repeats": {
                                        "description": "Updated repeat flag",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "repeat_frequency": {
                                        "description": "Updated repeat frequency",
                                        "type": "string",
                                        "example": "monthly",
                                        "nullable": true
                                    },
                                    "end_repeat_date": {
                                        "description": "Updated end repeat date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TaskResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found for this animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found for this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update task"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a specific task for an animal",
                "description": "Remove the specified task.",
                "operationId": "c5e30b3f478e5eed6de8dc39e9986a90",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "task",
                        "in": "path",
                        "description": "UUID of the task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not own the animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found for this animal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found for this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete task"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "List transactions for a specific animal",
                "operationId": "e285e3087dedd0b3d13ba48a28ad2068",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "transaction_type",
                        "in": "query",
                        "description": "Filter by transaction type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "sale"
                        }
                    },
                    {
                        "name": "transaction_status",
                        "in": "query",
                        "description": "Filter by transaction status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pending"
                        }
                    },
                    {
                        "name": "buyer_id",
                        "in": "query",
                        "description": "Filter by buyer ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Filter by seller ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of transactions per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TransactionCollection"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transactions retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a new transaction for an animal",
                "operationId": "60d047ed7f35c04741fc924b8681df0b",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "transaction_type": {
                                        "description": "Type of transaction",
                                        "type": "string",
                                        "example": "sale"
                                    },
                                    "price": {
                                        "description": "Base price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1000
                                    },
                                    "tax_amount": {
                                        "description": "Tax amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "currency": {
                                        "description": "Currency",
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "transaction_date": {
                                        "description": "Transaction date",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-03-24T10:00:00Z"
                                    },
                                    "delivery_date": {
                                        "description": "Delivery date",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-03-26T10:00:00Z",
                                        "nullable": true
                                    },
                                    "details": {
                                        "description": "Transaction details",
                                        "type": "string",
                                        "example": "Sale of livestock",
                                        "nullable": true
                                    },
                                    "payment_method": {
                                        "description": "Payment method",
                                        "type": "string",
                                        "example": "credit_card",
                                        "nullable": true
                                    },
                                    "payment_reference": {
                                        "description": "Payment reference",
                                        "type": "string",
                                        "example": "REF12345",
                                        "nullable": true
                                    },
                                    "deposit_amount": {
                                        "description": "Deposit amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 500,
                                        "nullable": true
                                    },
                                    "payment_due_date": {
                                        "description": "Payment due date",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-04-24T10:00:00Z",
                                        "nullable": true
                                    },
                                    "seller_id": {
                                        "description": "Seller user ID",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "buyer_id": {
                                        "description": "Buyer user ID",
                                        "type": "integer",
                                        "example": 2,
                                        "nullable": true
                                    },
                                    "seller_name": {
                                        "description": "Seller name (non-registered)",
                                        "type": "string",
                                        "example": "John Doe",
                                        "nullable": true
                                    },
                                    "buyer_name": {
                                        "description": "Buyer name (non-registered)",
                                        "type": "string",
                                        "example": "Jane Doe",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TransactionResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction created successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/transactions/{transaction}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Show a specific transaction for an animal",
                "operationId": "5084210c993d471e70c67f7ca3438658",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "ID of the transaction",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TransactionResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The transaction does not belong to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Update a specific transaction for an animal",
                "operationId": "ba4517e073c984e7f5d23c55c8bd1d29",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "ID of the transaction",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "transaction_type": {
                                        "description": "Updated transaction type",
                                        "type": "string",
                                        "example": "purchase"
                                    },
                                    "price": {
                                        "description": "Updated price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1200
                                    },
                                    "tax_amount": {
                                        "description": "Updated tax amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 60,
                                        "nullable": true
                                    },
                                    "deposit_amount": {
                                        "description": "Updated deposit amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 600,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TransactionResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction updated successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The transaction does not belong to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete a specific transaction for an animal",
                "operationId": "4b99b7d59e86a65286c3f636f4759436",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "ID of the transaction",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction deleted successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The transaction does not belong to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/animals/{animal}/transactions/summary": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction summary for an animal",
                "operationId": "0056a8804570a3a5f31b42a2689c0c8b",
                "parameters": [
                    {
                        "name": "animal",
                        "in": "path",
                        "description": "UUID of the animal",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "overview": {
                                                    "properties": {
                                                        "total_transactions": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total_value": {
                                                            "type": "string",
                                                            "example": "10500.00"
                                                        },
                                                        "pending_amount": {
                                                            "type": "string",
                                                            "example": "2500.00"
                                                        },
                                                        "completed_transactions": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "average_transaction_value": {
                                                            "type": "string",
                                                            "example": "1050.00"
                                                        },
                                                        "highest_transaction": {
                                                            "type": "string",
                                                            "example": "2000.00"
                                                        },
                                                        "lowest_transaction": {
                                                            "type": "string",
                                                            "example": "500.00"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status_distribution": {
                                                    "properties": {
                                                        "pending": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "paid": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "recent_transactions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "transaction_type": {
                                                                "type": "string",
                                                                "example": "sale"
                                                            },
                                                            "total_amount": {
                                                                "type": "string",
                                                                "example": "1050.00"
                                                            },
                                                            "balance_due": {
                                                                "type": "string",
                                                                "example": "550.00"
                                                            },
                                                            "transaction_date": {
                                                                "type": "string",
                                                                "example": "2025-03-24 10:00:00"
                                                            },
                                                            "transaction_status": {
                                                                "type": "string",
                                                                "example": "deposit_paid"
                                                            },
                                                            "seller_name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "buyer_name": {
                                                                "type": "string",
                                                                "example": "Jane Doe"
                                                            },
                                                            "payment_progress": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 47.6
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "monthly_trends": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "month": {
                                                                "type": "string",
                                                                "example": "2025-03"
                                                            },
                                                            "transaction_count": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "total_amount": {
                                                                "type": "string",
                                                                "example": "2100.00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-24T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction statistics retrieved successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have access to this animal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Handle login and return user data with token.",
                "operationId": "bc76a9d52929cab7a147ca7b5c527430",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        },
                                                        "avatar": {
                                                            "type": "string",
                                                            "example": "http://domain/storage/avatars/avatar.jpg",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|randomtokenstring"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Invalid credentials"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Handle logout by deleting the current token.",
                "operationId": "0ab4e3cf7bc4f7ec81b48f7928c7de7c",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get authenticated user data",
                "description": "Return the authenticated user's data.",
                "operationId": "99a3ede92cdf4564c0351d5937a22318",
                "responses": {
                    "200": {
                        "description": "User data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": "http://domain/storage/avatars/avatar.jpg",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch user data"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "description": "Update the authenticated user's profile.",
                "operationId": "a49fdfe23c9e2137b1214def7bcc8110",
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "newemail@example.com"
                                    },
                                    "avatar": {
                                        "description": "Image file (jpeg, png, jpg, gif, max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "newemail@example.com"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": "http://domain/storage/avatars/newavatar.jpg",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update profile"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/email/verification-notification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send email verification notification",
                "description": "Send a new email verification notification to the authenticated user.",
                "operationId": "21ff3f9f9b9e1407909089f864312e1c",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification link sent or email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification link sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to send verification email"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update the authenticated user's password",
                "description": "Update the authenticated user's password.",
                "operationId": "28566bf52aa8f35c19b304b2c2be3829",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "current_password": {
                                        "description": "User's current password",
                                        "type": "string",
                                        "example": "oldpassword123"
                                    },
                                    "new_password": {
                                        "description": "New password (min 8 characters, confirmed)",
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "new_password_confirmation": {
                                        "description": "Confirmation of the new password",
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided password is incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password update failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request a password reset link",
                "description": "Send a password reset link to the provided email.",
                "operationId": "e6a36e6e48542536284f7f26f6cc4d7f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "The email address to send the reset link to",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "We have emailed your password reset link!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed or email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to send reset link"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "We can't find a user with that email address."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process request"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account. This endpoint is exempt from CSRF protection.",
                "operationId": "18235ea6963e661c49bf381065779d6a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User's password (min 8 characters)",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "avatar": {
                                        "description": "User's avatar image (optional, max 1MB, jpeg/png/jpg/gif)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": "http://domain/storage/avatars/avatar.jpg",
                                                    "nullable": true
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abcdefghijklmnopqrstuvwxyz"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed or email already registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This email address is already in use."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        },
                                        "debug_id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "550e8400-e29b-41d4-a716-446655440000"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/api/verify-email/{id}/{hash}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify the user's email address",
                "description": "Verify the authenticated user's email address.",
                "operationId": "2a87bcc29fb717d6dd51a631c1b13064",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "The hash from the verification link",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "abc123def456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verification status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        },
                                        "verified": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verification failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Animal": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Bessie"
                    },
                    "type": {
                        "type": "string",
                        "example": "Cow"
                    },
                    "breed": {
                        "type": "string",
                        "example": "Holstein"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "tag_number": {
                        "type": "string",
                        "example": "A123"
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-15"
                    },
                    "gender": {
                        "type": "string",
                        "example": "female"
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "example": 650.5
                    },
                    "height": {
                        "type": "number",
                        "format": "float",
                        "example": 1.4
                    },
                    "is_breeding_stock": {
                        "type": "boolean",
                        "example": true
                    },
                    "internal_id": {
                        "type": "string",
                        "example": "INT-001"
                    }
                },
                "type": "object"
            },
            "BirthDetail": {
                "properties": {
                    "birth_weight": {
                        "type": "number",
                        "format": "float",
                        "example": 40.5
                    },
                    "birth_status": {
                        "type": "string",
                        "example": "healthy"
                    },
                    "health_at_birth": {
                        "type": "string",
                        "example": "good"
                    }
                },
                "type": "object"
            },
            "AnimalWithDetails": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Animal"
                    },
                    {
                        "$ref": "#/components/schemas/BirthDetail"
                    },
                    {
                        "properties": {
                            "dam": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Daisy"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Cow"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "female"
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2020-05-10"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "sire": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "3"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Bullseye"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Bull"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2019-08-20"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "offspring": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "4"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Calfie"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "Calf"
                                        },
                                        "gender": {
                                            "type": "string",
                                            "example": "female"
                                        },
                                        "birth_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-02-01"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "status_group": {
                                "type": "string",
                                "example": "live"
                            },
                            "status_color": {
                                "type": "string",
                                "example": "#00FF00"
                            },
                            "status_action": {
                                "type": "boolean",
                                "example": false
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ActivityResource": {
                "title": "Activity Resource",
                "description": "A resource representing an animal activity",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the activity",
                        "type": "integer",
                        "example": 1
                    },
                    "animal_id": {
                        "description": "The ID of the animal associated with this activity",
                        "type": "integer",
                        "example": 1
                    },
                    "activity_type": {
                        "description": "The type of activity (e.g., feeding, breeding)",
                        "type": "string",
                        "example": "feeding"
                    },
                    "activity_date": {
                        "description": "The date the activity occurred",
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-24"
                    },
                    "description": {
                        "description": "A description of the activity",
                        "type": "string",
                        "example": "Fed the animal with grain"
                    },
                    "notes": {
                        "description": "Additional notes about the activity",
                        "type": "string",
                        "example": "Animal seemed healthy",
                        "nullable": true
                    },
                    "breeding_date": {
                        "description": "The date of breeding, if applicable",
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-24",
                        "nullable": true
                    },
                    "breeding_notes": {
                        "description": "Notes specific to breeding, if applicable",
                        "type": "string",
                        "example": "Successful breeding",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "The timestamp when the activity was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "The timestamp when the activity was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "PaginatedActivityResource": {
                "title": "Paginated Activity Resource",
                "description": "A paginated collection of activity resources",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActivityResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "example": "http://api.example.com/activities?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://api.example.com/activities?page=10"
                            },
                            "prev": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "example": "http://api.example.com/activities?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 10
                            },
                            "path": {
                                "type": "string",
                                "example": "http://api.example.com/activities"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 100
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "HealthResource": {
                "title": "Health Resource",
                "description": "A resource representing an animal's health record",
                "properties": {
                    "Health_id": {
                        "description": "Unique identifier of the health record",
                        "type": "string",
                        "format": "uuid",
                        "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                    },
                    "animal_id": {
                        "description": "UUID of the associated animal",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "health_status": {
                        "description": "Current health status of the animal",
                        "type": "string",
                        "example": "Healthy"
                    },
                    "vaccination_status": {
                        "description": "Vaccination status of the animal",
                        "type": "string",
                        "example": "Up-to-date"
                    },
                    "vet_contact_id": {
                        "description": "UUID of the vet contact",
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000",
                        "nullable": true
                    },
                    "medical_history": {
                        "description": "Medical history of the animal",
                        "type": "string",
                        "example": "Recovered from flu in 2024",
                        "nullable": true
                    },
                    "dietary_restrictions": {
                        "description": "Dietary restrictions",
                        "type": "string",
                        "example": "No dairy",
                        "nullable": true
                    },
                    "neutered_spayed": {
                        "description": "Whether the animal is neutered or spayed",
                        "type": "boolean",
                        "example": true
                    },
                    "regular_medication": {
                        "description": "Regular medication details",
                        "type": "string",
                        "example": "Daily vitamin supplement",
                        "nullable": true
                    },
                    "last_vet_visit": {
                        "description": "Date of the last vet visit",
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-20",
                        "nullable": true
                    },
                    "insurance_details": {
                        "description": "Insurance details",
                        "type": "string",
                        "example": "Policy #12345",
                        "nullable": true
                    },
                    "exercise_requirements": {
                        "description": "Exercise requirements",
                        "type": "string",
                        "example": "30 min walk daily",
                        "nullable": true
                    },
                    "parasite_prevention": {
                        "description": "Parasite prevention measures",
                        "type": "string",
                        "example": "Monthly flea treatment",
                        "nullable": true
                    },
                    "vaccinations": {
                        "description": "Vaccination details",
                        "type": "string",
                        "example": "Rabies: 2025-01-01",
                        "nullable": true
                    },
                    "allergies": {
                        "description": "Known allergies",
                        "type": "string",
                        "example": "Peanuts",
                        "nullable": true
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "example": "Monitor weight",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp when the record was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the record was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "NoteResource": {
                "title": "Note Resource",
                "description": "A resource representing a note associated with an animal",
                "properties": {
                    "notes_id": {
                        "description": "Unique identifier of the note",
                        "type": "string",
                        "format": "uuid",
                        "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                    },
                    "content": {
                        "description": "Main content of the note",
                        "type": "string",
                        "example": "Check animal health status"
                    },
                    "category": {
                        "description": "Category of the note",
                        "type": "string",
                        "example": "Health"
                    },
                    "keywords": {
                        "description": "Keywords associated with the note",
                        "type": "string",
                        "example": "health,checkup"
                    },
                    "file_path": {
                        "description": "Path to an attached file, if any",
                        "type": "string",
                        "example": "/uploads/notes/health_check.pdf",
                        "nullable": true
                    },
                    "add_to_calendar": {
                        "description": "Whether the note should be added to a calendar",
                        "type": "boolean",
                        "example": false
                    },
                    "priority": {
                        "description": "Priority level of the note",
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "medium"
                    },
                    "status": {
                        "description": "Current status of the note",
                        "type": "string",
                        "example": "pending"
                    },
                    "due_date": {
                        "description": "Due date for the note, if applicable",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-25T14:00:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp when the note was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the note was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    },
                    "animal_id": {
                        "description": "UUID of the associated animal",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "user_id": {
                        "description": "UUID of the user who created the note",
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                },
                "type": "object"
            },
            "SupplierResource": {
                "title": "Supplier Resource",
                "description": "A resource representing a supplier",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the supplier",
                        "type": "string",
                        "format": "uuid",
                        "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                    },
                    "name": {
                        "description": "Name of the supplier",
                        "type": "string",
                        "example": "Farm Supplies Inc."
                    },
                    "email": {
                        "description": "Email address of the supplier",
                        "type": "string",
                        "format": "email",
                        "example": "contact@farmsupplies.com"
                    },
                    "phone": {
                        "description": "Phone number of the supplier",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "website": {
                        "description": "Website URL of the supplier",
                        "type": "string",
                        "example": "https://farmsupplies.com",
                        "nullable": true
                    },
                    "tax_number": {
                        "description": "Tax identification number",
                        "type": "string",
                        "example": "TAX123456",
                        "nullable": true
                    },
                    "address": {
                        "description": "Street address",
                        "type": "string",
                        "example": "123 Farm Road"
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "example": "Springfield"
                    },
                    "state": {
                        "description": "State or region",
                        "type": "string",
                        "example": "IL"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "example": "62701"
                    },
                    "country": {
                        "description": "Country",
                        "type": "string",
                        "example": "USA"
                    },
                    "latitude": {
                        "description": "Latitude coordinate",
                        "type": "number",
                        "format": "float",
                        "example": 39.7817,
                        "nullable": true
                    },
                    "longitude": {
                        "description": "Longitude coordinate",
                        "type": "number",
                        "format": "float",
                        "example": -89.6501,
                        "nullable": true
                    },
                    "type": {
                        "description": "Type of supplier",
                        "type": "string",
                        "example": "vendor"
                    },
                    "product_type": {
                        "description": "Type of products supplied",
                        "type": "string",
                        "example": "feed"
                    },
                    "shop_name": {
                        "description": "Name of the supplier's shop",
                        "type": "string",
                        "example": "Farm Store",
                        "nullable": true
                    },
                    "business_registration_number": {
                        "description": "Business registration number",
                        "type": "string",
                        "example": "BRN789123",
                        "nullable": true
                    },
                    "contract_start_date": {
                        "description": "Start date of the contract",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01",
                        "nullable": true
                    },
                    "contract_end_date": {
                        "description": "End date of the contract",
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31",
                        "nullable": true
                    },
                    "account_holder": {
                        "description": "Bank account holder name",
                        "type": "string",
                        "example": "Farm Supplies Inc.",
                        "nullable": true
                    },
                    "account_number": {
                        "description": "Bank account number",
                        "type": "string",
                        "example": "1234567890",
                        "nullable": true
                    },
                    "bank_name": {
                        "description": "Name of the bank",
                        "type": "string",
                        "example": "First National Bank",
                        "nullable": true
                    },
                    "bank_branch": {
                        "description": "Bank branch name",
                        "type": "string",
                        "example": "Springfield Branch",
                        "nullable": true
                    },
                    "swift_code": {
                        "description": "SWIFT code",
                        "type": "string",
                        "example": "FNUS33XXX",
                        "nullable": true
                    },
                    "iban": {
                        "description": "IBAN",
                        "type": "string",
                        "example": "US12345678901234567890",
                        "nullable": true
                    },
                    "supplier_importance": {
                        "description": "Importance level of the supplier",
                        "type": "string",
                        "example": "high"
                    },
                    "inventory_level": {
                        "description": "Current inventory level",
                        "type": "integer",
                        "example": 100
                    },
                    "reorder_point": {
                        "description": "Reorder point for inventory",
                        "type": "integer",
                        "example": 20
                    },
                    "minimum_order_quantity": {
                        "description": "Minimum order quantity",
                        "type": "integer",
                        "example": 50
                    },
                    "lead_time_days": {
                        "description": "Lead time in days",
                        "type": "integer",
                        "example": 5
                    },
                    "payment_terms": {
                        "description": "Payment terms",
                        "type": "string",
                        "example": "Net 30"
                    },
                    "credit_limit": {
                        "description": "Credit limit",
                        "type": "number",
                        "format": "float",
                        "example": 5000
                    },
                    "currency": {
                        "description": "Currency used",
                        "type": "string",
                        "example": "USD"
                    },
                    "tax_rate": {
                        "description": "Tax rate",
                        "type": "number",
                        "format": "float",
                        "example": 0.08
                    },
                    "supplier_rating": {
                        "description": "Supplier performance rating",
                        "type": "number",
                        "format": "float",
                        "example": 4.5
                    },
                    "status": {
                        "description": "Supplier status",
                        "type": "string",
                        "example": "active"
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "example": "Reliable supplier",
                        "nullable": true
                    },
                    "contact": {
                        "description": "Primary contact information",
                        "properties": {
                            "name": {
                                "description": "Contact name",
                                "type": "string",
                                "example": "Jane Doe"
                            },
                            "position": {
                                "description": "Contact position",
                                "type": "string",
                                "example": "Sales Manager",
                                "nullable": true
                            },
                            "email": {
                                "description": "Contact email",
                                "type": "string",
                                "format": "email",
                                "example": "jane@farmsupplies.com",
                                "nullable": true
                            },
                            "phone": {
                                "description": "Contact phone",
                                "type": "string",
                                "example": "+1234567891",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "description": "Timestamp when the supplier was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the supplier was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "TaskResource": {
                "title": "Task Resource",
                "description": "A resource representing a task associated with an animal",
                "properties": {
                    "task_id": {
                        "description": "Unique identifier of the task",
                        "type": "string",
                        "format": "uuid",
                        "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                    },
                    "title": {
                        "description": "Title of the task",
                        "type": "string",
                        "example": "Vaccination"
                    },
                    "task_type": {
                        "description": "Type of the task",
                        "type": "string",
                        "example": "medical"
                    },
                    "start_date": {
                        "description": "Start date of the task",
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-25"
                    },
                    "start_time": {
                        "description": "Start time of the task",
                        "type": "string",
                        "format": "time",
                        "example": "09:00:00"
                    },
                    "end_date": {
                        "description": "End date of the task",
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-25",
                        "nullable": true
                    },
                    "end_time": {
                        "description": "End time of the task",
                        "type": "string",
                        "format": "time",
                        "example": "10:00:00",
                        "nullable": true
                    },
                    "duration": {
                        "description": "Duration of the task in minutes",
                        "type": "integer",
                        "example": 60
                    },
                    "description": {
                        "description": "Description of the task",
                        "type": "string",
                        "example": "Administer vaccine to animal"
                    },
                    "health_notes": {
                        "description": "Health-related notes",
                        "type": "string",
                        "example": "Monitor for side effects",
                        "nullable": true
                    },
                    "location": {
                        "description": "Location where the task occurs",
                        "type": "string",
                        "example": "Barn A"
                    },
                    "priority": {
                        "description": "Priority level of the task",
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "high"
                    },
                    "status": {
                        "description": "Current status of the task",
                        "type": "string",
                        "example": "pending"
                    },
                    "repeats": {
                        "description": "Whether the task repeats",
                        "type": "boolean",
                        "example": false
                    },
                    "repeat_frequency": {
                        "description": "Frequency of repetition (e.g., daily, weekly)",
                        "type": "string",
                        "example": "weekly",
                        "nullable": true
                    },
                    "end_repeat_date": {
                        "description": "Date when repetition ends",
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp when the task was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the task was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    },
                    "animal_id": {
                        "description": "UUID of the associated animal",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "user_id": {
                        "description": "UUID of the associated user",
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                },
                "type": "object"
            },
            "TransactionCollection": {
                "title": "Transaction Collection",
                "description": "A paginated collection of transactions",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionResource"
                        }
                    },
                    "meta": {
                        "properties": {
                            "total": {
                                "description": "Total number of transactions",
                                "type": "integer",
                                "example": 100
                            },
                            "count": {
                                "description": "Number of transactions in current page",
                                "type": "integer",
                                "example": 15
                            },
                            "per_page": {
                                "description": "Items per page",
                                "type": "integer",
                                "example": 15
                            },
                            "current_page": {
                                "description": "Current page number",
                                "type": "integer",
                                "example": 1
                            },
                            "total_pages": {
                                "description": "Total number of pages",
                                "type": "integer",
                                "example": 7
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TransactionResource": {
                "title": "Transaction Resource",
                "description": "A resource representing a transaction",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the transaction",
                        "type": "integer",
                        "example": 1
                    },
                    "transaction_type": {
                        "description": "Type of transaction (e.g., sale, purchase)",
                        "type": "string",
                        "example": "sale"
                    },
                    "price": {
                        "description": "Base price of the transaction",
                        "type": "number",
                        "format": "float",
                        "example": 1000
                    },
                    "tax_amount": {
                        "description": "Tax amount",
                        "type": "number",
                        "format": "float",
                        "example": 50,
                        "nullable": true
                    },
                    "total_amount": {
                        "description": "Total amount including tax",
                        "type": "number",
                        "format": "float",
                        "example": 1050
                    },
                    "currency": {
                        "description": "Currency of the transaction",
                        "type": "string",
                        "example": "USD"
                    },
                    "transaction_date": {
                        "description": "Date and time of the transaction",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "delivery_date": {
                        "description": "Delivery date and time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-26T10:00:00Z",
                        "nullable": true
                    },
                    "details": {
                        "description": "Transaction details",
                        "type": "string",
                        "example": "Sale of livestock",
                        "nullable": true
                    },
                    "payment_method": {
                        "description": "Payment method",
                        "type": "string",
                        "example": "credit_card",
                        "nullable": true
                    },
                    "payment_reference": {
                        "description": "Payment reference",
                        "type": "string",
                        "example": "REF12345",
                        "nullable": true
                    },
                    "deposit_amount": {
                        "description": "Deposit amount paid",
                        "type": "number",
                        "format": "float",
                        "example": 500,
                        "nullable": true
                    },
                    "balance_due": {
                        "description": "Remaining balance due",
                        "type": "number",
                        "format": "float",
                        "example": 550
                    },
                    "payment_due_date": {
                        "description": "Payment due date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-24T10:00:00Z",
                        "nullable": true
                    },
                    "transaction_status": {
                        "description": "Status of the transaction (e.g., pending, deposit_paid, paid)",
                        "type": "string",
                        "example": "pending"
                    },
                    "seller_name": {
                        "description": "Name of the seller (non-registered)",
                        "type": "string",
                        "example": "John Doe",
                        "nullable": true
                    },
                    "seller_company": {
                        "description": "Seller's company name",
                        "type": "string",
                        "example": "Doe Farms",
                        "nullable": true
                    },
                    "seller_tax_id": {
                        "description": "Seller's tax ID",
                        "type": "string",
                        "example": "TAX123",
                        "nullable": true
                    },
                    "seller_contact": {
                        "description": "Seller's contact person",
                        "type": "string",
                        "example": "Jane Smith",
                        "nullable": true
                    },
                    "seller_email": {
                        "description": "Seller's email",
                        "type": "string",
                        "example": "john@doefarms.com",
                        "nullable": true
                    },
                    "seller_phone": {
                        "description": "Seller's phone",
                        "type": "string",
                        "example": "+1234567890",
                        "nullable": true
                    },
                    "seller_address": {
                        "description": "Seller's address",
                        "type": "string",
                        "example": "123 Farm Rd",
                        "nullable": true
                    },
                    "seller_city": {
                        "description": "Seller's city",
                        "type": "string",
                        "example": "Springfield",
                        "nullable": true
                    },
                    "seller_state": {
                        "description": "Seller's state",
                        "type": "string",
                        "example": "IL",
                        "nullable": true
                    },
                    "seller_country": {
                        "description": "Seller's country",
                        "type": "string",
                        "example": "USA",
                        "nullable": true
                    },
                    "seller_postal_code": {
                        "description": "Seller's postal code",
                        "type": "string",
                        "example": "62701",
                        "nullable": true
                    },
                    "seller_identification": {
                        "description": "Seller's identification",
                        "type": "string",
                        "example": "ID123",
                        "nullable": true
                    },
                    "seller_license_number": {
                        "description": "Seller's license number",
                        "type": "string",
                        "example": "LIC456",
                        "nullable": true
                    },
                    "buyer_name": {
                        "description": "Name of the buyer (non-registered)",
                        "type": "string",
                        "example": "Jane Doe",
                        "nullable": true
                    },
                    "buyer_company": {
                        "description": "Buyer's company name",
                        "type": "string",
                        "example": "Doe Buyers Inc.",
                        "nullable": true
                    },
                    "buyer_tax_id": {
                        "description": "Buyer's tax ID",
                        "type": "string",
                        "example": "TAX456",
                        "nullable": true
                    },
                    "buyer_contact": {
                        "description": "Buyer's contact person",
                        "type": "string",
                        "example": "John Smith",
                        "nullable": true
                    },
                    "buyer_email": {
                        "description": "Buyer's email",
                        "type": "string",
                        "example": "jane@doebuyers.com",
                        "nullable": true
                    },
                    "buyer_phone": {
                        "description": "Buyer's phone",
                        "type": "string",
                        "example": "+1234567891",
                        "nullable": true
                    },
                    "buyer_address": {
                        "description": "Buyer's address",
                        "type": "string",
                        "example": "456 Buyer Rd",
                        "nullable": true
                    },
                    "buyer_city": {
                        "description": "Buyer's city",
                        "type": "string",
                        "example": "Springfield",
                        "nullable": true
                    },
                    "buyer_state": {
                        "description": "Buyer's state",
                        "type": "string",
                        "example": "IL",
                        "nullable": true
                    },
                    "buyer_country": {
                        "description": "Buyer's country",
                        "type": "string",
                        "example": "USA",
                        "nullable": true
                    },
                    "buyer_postal_code": {
                        "description": "Buyer's postal code",
                        "type": "string",
                        "example": "62702",
                        "nullable": true
                    },
                    "buyer_identification": {
                        "description": "Buyer's identification",
                        "type": "string",
                        "example": "ID456",
                        "nullable": true
                    },
                    "buyer_license_number": {
                        "description": "Buyer's license number",
                        "type": "string",
                        "example": "LIC789",
                        "nullable": true
                    },
                    "invoice_number": {
                        "description": "Invoice number",
                        "type": "string",
                        "example": "INV001",
                        "nullable": true
                    },
                    "contract_number": {
                        "description": "Contract number",
                        "type": "string",
                        "example": "CON001",
                        "nullable": true
                    },
                    "terms_accepted": {
                        "description": "Whether terms were accepted",
                        "type": "boolean",
                        "example": true
                    },
                    "terms_accepted_at": {
                        "description": "Timestamp when terms were accepted",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z",
                        "nullable": true
                    },
                    "health_certificate_number": {
                        "description": "Health certificate number",
                        "type": "string",
                        "example": "HC001",
                        "nullable": true
                    },
                    "transport_license_number": {
                        "description": "Transport license number",
                        "type": "string",
                        "example": "TL001",
                        "nullable": true
                    },
                    "attached_documents": {
                        "description": "List of attached documents",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "doc1.pdf"
                        },
                        "nullable": true
                    },
                    "location_of_sale": {
                        "description": "Location of sale",
                        "type": "string",
                        "example": "Farm Market",
                        "nullable": true
                    },
                    "terms_and_conditions": {
                        "description": "Terms and conditions",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Payment within 30 days"
                        },
                        "nullable": true
                    },
                    "special_conditions": {
                        "description": "Special conditions",
                        "type": "string",
                        "example": "Requires vet check",
                        "nullable": true
                    },
                    "delivery_instructions": {
                        "description": "Delivery instructions",
                        "type": "string",
                        "example": "Deliver to back gate",
                        "nullable": true
                    },
                    "insurance_policy_number": {
                        "description": "Insurance policy number",
                        "type": "string",
                        "example": "INS001",
                        "nullable": true
                    },
                    "insurance_amount": {
                        "description": "Insurance amount",
                        "type": "number",
                        "format": "float",
                        "example": 200,
                        "nullable": true
                    },
                    "payments": {
                        "description": "List of payments associated with the transaction",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "Unique identifier of the payment",
                                    "type": "integer",
                                    "example": 1
                                },
                                "transaction_id": {
                                    "description": "ID of the associated transaction",
                                    "type": "integer",
                                    "example": 1
                                },
                                "amount": {
                                    "description": "Payment amount",
                                    "type": "number",
                                    "format": "float",
                                    "example": 500
                                },
                                "payment_method": {
                                    "description": "Method used for payment",
                                    "type": "string",
                                    "example": "credit_card"
                                },
                                "payment_reference": {
                                    "description": "Payment reference",
                                    "type": "string",
                                    "example": "REF123",
                                    "nullable": true
                                },
                                "payment_date": {
                                    "description": "Date and time of the payment",
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2025-03-24T10:00:00Z"
                                },
                                "payment_status": {
                                    "description": "Status of the payment",
                                    "type": "string",
                                    "example": "completed"
                                },
                                "notes": {
                                    "description": "Additional notes about the payment",
                                    "type": "string",
                                    "example": "Initial deposit",
                                    "nullable": true
                                },
                                "created_at": {
                                    "description": "Creation timestamp",
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2025-03-24T10:00:00Z"
                                },
                                "updated_at": {
                                    "description": "Last update timestamp",
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2025-03-24T12:00:00Z"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "CollectorResource": {
                "title": "Collector Resource",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "employee_id": {
                        "type": "string",
                        "example": "EMP123"
                    },
                    "contact_number": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "certification_number": {
                        "type": "string",
                        "example": "CERT456"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "ProductCategoryResource": {
                "title": "Product Category Resource",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
                    },
                    "name": {
                        "type": "string",
                        "example": "Milk"
                    },
                    "measurement_unit": {
                        "type": "string",
                        "example": "liters"
                    },
                    "description": {
                        "type": "string",
                        "example": "Dairy product category"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "grades": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductGradeResource"
                        }
                    }
                },
                "type": "object"
            },
            "ProductGradeResource": {
                "title": "Product Grade Resource",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "8f14e45f-ceea-41d4-a716-446655440000"
                    },
                    "grade_name": {
                        "type": "string",
                        "example": "Grade A"
                    },
                    "description": {
                        "type": "string",
                        "example": "High quality grade"
                    },
                    "price_modifier": {
                        "type": "number",
                        "format": "float",
                        "example": 1.2
                    }
                },
                "type": "object"
            },
            "ProductionMethodResource": {
                "title": "Production Method Resource",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "7c9e6679-7425-40de-944b-e07fc1f90ae7"
                    },
                    "product_category_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d"
                    },
                    "method_name": {
                        "type": "string",
                        "example": "Manual Milking"
                    },
                    "description": {
                        "type": "string",
                        "example": "Traditional milking method"
                    },
                    "requires_certification": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "StorageLocationResource": {
                "title": "Storage Location Resource",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                    },
                    "name": {
                        "type": "string",
                        "example": "Cold Room 1"
                    },
                    "location_code": {
                        "type": "string",
                        "example": "CR1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Main cold storage"
                    },
                    "storage_conditions": {
                        "type": "string",
                        "example": "5°C, dry"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "YieldRecordResource": {
                "title": "Yield Record Resource",
                "description": "A resource representing a production record",
                "properties": {
                    "yield_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
                    },
                    "storage_location": {
                        "$ref": "#/components/schemas/StorageLocationResource"
                    },
                    "production_method": {
                        "$ref": "#/components/schemas/ProductionMethodResource"
                    },
                    "production_grade": {
                        "$ref": "#/components/schemas/ProductGradeResource"
                    },
                    "product_category": {
                        "$ref": "#/components/schemas/ProductCategoryResource"
                    },
                    "collector": {
                        "$ref": "#/components/schemas/CollectorResource"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "float",
                        "example": 5.5
                    },
                    "measurement_unit": {
                        "type": "string",
                        "example": "liters"
                    },
                    "price_per_unit": {
                        "type": "number",
                        "format": "float",
                        "example": 2.5
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "example": 13.75
                    },
                    "production_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-24"
                    },
                    "production_time": {
                        "type": "string",
                        "format": "time",
                        "example": "10:00:00"
                    },
                    "quality": {
                        "properties": {
                            "status": {
                                "type": "string",
                                "example": "good"
                            },
                            "notes": {
                                "type": "string",
                                "example": "No issues observed"
                            },
                            "trace_number": {
                                "type": "string",
                                "example": "TRC12345"
                            }
                        },
                        "type": "object"
                    },
                    "conditions": {
                        "properties": {
                            "weather": {
                                "type": "string",
                                "example": "sunny"
                            },
                            "storage": {
                                "type": "string",
                                "example": "cool and dry"
                            }
                        },
                        "type": "object"
                    },
                    "organic": {
                        "properties": {
                            "is_organic": {
                                "type": "boolean",
                                "example": true
                            },
                            "certification_number": {
                                "type": "string",
                                "example": "ORG-789"
                            }
                        },
                        "type": "object"
                    },
                    "additional_attributes": {
                        "type": "object",
                        "example": {
                            "color": "white"
                        }
                    },
                    "notes": {
                        "type": "string",
                        "example": "Processed quickly"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-24T12:00:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Animals",
            "description": "API endpoints for managing animals"
        },
        {
            "name": "Activities",
            "description": "Activities"
        },
        {
            "name": "Production Records",
            "description": "Production Records"
        },
        {
            "name": "Health",
            "description": "Health"
        },
        {
            "name": "Notes",
            "description": "Notes"
        },
        {
            "name": "Suppliers",
            "description": "Suppliers"
        },
        {
            "name": "Tasks",
            "description": "Tasks"
        },
        {
            "name": "Transactions",
            "description": "Transactions"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}